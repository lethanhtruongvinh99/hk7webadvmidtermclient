{"version":3,"sources":["Components/Login/Login.js","Components/Login/Signup.js","Components/Landing/scrum.png","Components/Landing/Landing.js","Components/BoardItem/BoardItem.js","Components/BoardList/BoardList.js","Components/Header/Header.js","Components/Dashboard/Dashboard.js","Components/Task/Task.js","Components/ListTask/ListTask.js","Components/Column/Column.js","Components/BoardDetail/BoardDetail.js","Components/Login/Profile.js","Components/CheckAuth/CheckAuth.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","herokuhost","useState","username","setUsername","password","setPassword","notification","setNotification","isLogin","setIsLogin","history","useHistory","handleGGLogin","a","window","open","handleFBLogin","login","sendData","fetch","method","headers","Headers","body","JSON","stringify","response","status","json","data","message","localStorage","setItem","accessToken","handleLogin","useEffect","getItem","push","className","onSubmit","e","preventDefault","handleSubmit","htmlFor","type","id","name","value","onChange","target","required","style","marginTop","onClick","textAlign","cursor","Signup","length","cache","credentials","then","console","log","Landing","isLoggedIn","handleLoggedIn","handleLanding","to","borderRadius","src","Logo","alt","width","BoardItem","deleteModalHide","setDeleteModelHide","editModalHide","setEditModalHide","newBoardName","setNewBoardName","showBoard","setShowBoard","handleConfirmEdit","authorization","boardId","alert","boardName","requestDeleteBoard","isDeleted","isCreated","fontStyle","userId","marginLeft","Modal","show","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","Body","Footer","BoardList","setData","isModalHide","setIsModalHide","setBoardName","loadData","requestAddNewBoard","dataRes","concat","mode","Fragment","icon","faPlusCircle","size","color","paddingLeft","map","item","faColumns","faUserCircle","removeItem","faSignOutAlt","Dashboard","Task","editTaskModalHide","setEditTaskModalHide","deleteTaskModalHide","setDeleteTaskModalHide","newTaskName","setNewTaskName","showTask","setShowTask","requestEditTask","taskId","taskItem","commentId","content","requestDeleteTask","hideDeletedTask","faEdit","faTrash","ListTask","requestAddTask","columnId","ColumnId","requestAllTask","Column","editColumnModalHide","setEditColumnModalHide","deleteColumnModalHide","setDeleteColumnModalHide","newColumnName","setNewColumnName","showColumn","setShowColumn","requestEditColumn","ColumnItem","newcolumnName","taskName","requestDeleteColumn","marginBottom","BoardDetail","url","useRouteMatch","params","boardData","setBoardData","addColumnModalHide","setAddColumnModalHide","loadBoardInfo","loadBoardColumns","requestAddNewColumn","marginRight","navigator","clipboard","writeText","Profile","user","setUser","editedName","setEditedName","changePasswordNotification","setChangePasswordNotification","changepasswordMoDalHide","setChangePasswordModalHide","newPassword","setNewPassword","confNewPassword","setConfNewPassowrd","updateProfile","fullname","respone","changePassword","confPassword","getProfile","handleBackToLogin","fontSize","createdDate","CheckAuth","getFromRedirect","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5525ae2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nfunction Login(props) {\r\n  //HOOK\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [notification, setNotification] = useState();\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  // const [message, setMessage] = useState(\"\");\r\n  const history = useHistory();\r\n  const loggedIn = () => {\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      handleLogin();\r\n    }\r\n  };\r\n  const handleGGLogin = async () => {\r\n    window.open(herokuhost + \"/login/google\", \"_self\");\r\n  };\r\n  const handleFBLogin = async () => {\r\n    window.open(herokuhost + \"/login/facebook\", \"_self\");\r\n  };\r\n  const login = async () => {\r\n    let sendData = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n    const response = await fetch(herokuhost + \"/login\", {\r\n      method: \"POST\",\r\n      headers: new Headers({ \"content-type\": \"application/json\" }),\r\n      body: JSON.stringify(sendData),\r\n    });\r\n    if (response.status === 401) {\r\n      const data = await response.json();\r\n      setNotification(data.message);\r\n    }\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      localStorage.setItem(\"accessToken\", data.accessToken);\r\n      setIsLogin(true);\r\n      handleLogin();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loggedIn();\r\n    if (isLogin) {\r\n      handleLogin();\r\n    }\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    login();\r\n  };\r\n  const handleLogin = () => {\r\n    history.push(\"/dashboard\");\r\n  };\r\n  const handleRegister = () => {\r\n    history.push(\"/signup\");\r\n  };\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"header\">Đăng Nhập</div>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Tên đăng nhập</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Mật khẩu</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <p className=\"notification\">{notification}</p>\r\n        <hr />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-lg btn-block\"\r\n          style={{ marginTop: \"1rem\" }}\r\n        >\r\n          Đăng nhập\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-lg btn-block\"\r\n          style={{ marginTop: \"1rem\" }}\r\n          onClick={() => handleGGLogin()}\r\n        >\r\n          Đăng nhập với Google\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-info btn-lg btn-block\"\r\n          style={{ marginTop: \"1rem\" }}\r\n          onClick={() => {\r\n            handleFBLogin();\r\n          }}\r\n        >\r\n          Đăng nhập với Facebook\r\n        </button>\r\n        <hr />\r\n        <p\r\n          style={{ textAlign: \"center\", cursor: \"pointer\" }}\r\n          onClick={handleRegister}\r\n        >\r\n          Tạo tài khoản\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nfunction Signup() {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const history = useHistory();\r\n  const error = [\r\n    \"Mật khẩu chưa khớp\",\r\n    \"Mật khẩu phải từ 6 đến 20 ký tự\",\r\n    \"Tên đang nhập đã tồn tại\",\r\n  ];\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [notification, setNotification] = useState();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username.length === 0 || password.length === 0) {\r\n      setNotification(\"Vui lòng nhập đầy đủ thông tin\");\r\n      return;\r\n    }\r\n    const signUpStatus = fetch(herokuhost + \"/signup\", {\r\n      method: \"POST\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: new Headers({ \"content-type\": \"application/json\" }),\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setNotification(data.message);\r\n      });\r\n  };\r\n  const handleLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"header\">Đăng ký</div>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Tên đăng nhập</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Mật khẩu</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <p className=\"notification\">{notification}</p>\r\n        <hr />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-lg btn-block\"\r\n          style={{ marginTop: \"1rem\" }}\r\n        >\r\n          Đăng ký\r\n        </button>\r\n        <hr />\r\n        <p\r\n          style={{ textAlign: \"center\", cursor: \"pointer\" }}\r\n          onClick={handleLogin}\r\n        >\r\n          Đăng nhập\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Signup;\r\n","export default __webpack_public_path__ + \"static/media/scrum.93cff158.png\";","import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"./scrum.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Landing(props) {\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  console.log(props.isLoggedIn + \" Logged in\");\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (props.isLoggedIn) {\r\n      handleLoggedIn();\r\n    } else {\r\n      handleLanding();\r\n    }\r\n  }, []);\r\n  const handleLoggedIn = () => {\r\n    history.push(\"/dashboard\");\r\n  };\r\n  const handleLanding = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h1 className=\"Logo\">AnotherRetro</h1>\r\n        </div>\r\n        <div className=\"row\" style={{ marginTop: \"9rem\" }}>\r\n          <div className=\"col-6\">\r\n            <h1>Improve with Fun Sprint Retrospectives</h1>\r\n            <h4>\r\n              Collaborate with your remote team and get better in what you do\r\n              with a simple, intuitive and beautiful tool\r\n            </h4>\r\n            <Link to=\"login\" type=\"btn\">\r\n              <button className=\"btn btn-success\" style={{ borderRadius: \"\" }}>\r\n                Get Started for Free\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <img src={Logo} alt=\"scrumprocess\" style={{width:\"600px\"}} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Landing;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\n\r\nfunction BoardItem(props) {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const [deleteModalHide, setDeleteModelHide] = useState(false);\r\n  const [editModalHide, setEditModalHide] = useState(false);\r\n  const [newBoardName, setNewBoardName] = useState(\"\");\r\n  const [showBoard, setShowBoard] = useState(true);\r\n  useEffect(() => {}, []);\r\n  const handleConfirmEdit = async () => {\r\n    const response = await fetch(herokuhost + \"/boards/update\", {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      }),\r\n      body: JSON.stringify({\r\n        boardId: props.BoardItem.boardId,\r\n        newBoardName: newBoardName,\r\n      }),\r\n    });\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      alert(data.message);\r\n      props.BoardItem.boardName = newBoardName;\r\n      setEditModalHide(false);\r\n    } else {\r\n      const data = await response.json();\r\n      alert(data.message);\r\n    }\r\n  };\r\n  const hideDeletedBoard = () => {\r\n    if (props.BoardItem.isDeleted === 1) setShowBoard(!showBoard);\r\n  };\r\n  const handleDeleteBoard = () => {\r\n    requestDeleteBoard();\r\n    setDeleteModelHide(true);\r\n  };\r\n\r\n  const requestDeleteBoard = async () => {\r\n    const response = await fetch(herokuhost + \"/boards/delete\", {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      }),\r\n      body: JSON.stringify({ boardId: props.BoardItem.boardId }),\r\n    });\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      props.BoardItem.isDeleted = 1;\r\n      hideDeletedBoard();\r\n      alert(data.message);\r\n    } else {\r\n      const data = await response.json();\r\n      alert(data.message);\r\n      setDeleteModelHide(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {showBoard && (\r\n        <div className=\"card\" style={{ width: \"18rem\" }}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{props.BoardItem.boardName}</h5>\r\n            <p className=\"card-text\">{props.BoardItem.isCreated}</p>\r\n            <small className=\"float-left\" style={{ fontStyle: \"italic\" }}>\r\n              By: {props.BoardItem.userId}\r\n            </small>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <Link\r\n              to={`/boardID${props.BoardItem.boardId}`}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Xem\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-warning\"\r\n              style={{ marginLeft: \"5px\" }}\r\n              onClick={() => setEditModalHide(true)}\r\n            >\r\n              Sửa\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              style={{ marginLeft: \"5px\" }}\r\n              onClick={() => setDeleteModelHide(true)}\r\n            >\r\n              Xóa\r\n            </button>\r\n          </div>\r\n          <div>\r\n            {/* Edit Modal */}\r\n            <Modal\r\n              show={editModalHide}\r\n              onHide={() => setEditModalHide(false)}\r\n              dialogClassName=\"modal-90w\"\r\n              aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                  Sửa tên bảng\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div>\r\n                  <label>Tên mới</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newBoardName}\r\n                    onChange={(e) => setNewBoardName(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <button\r\n                  className=\"btn btn-primary float-left\"\r\n                  onClick={() => handleConfirmEdit()}\r\n                >\r\n                  Xác nhận\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            {/* Delete Modal */}\r\n            <Modal\r\n              show={deleteModalHide}\r\n              onHide={() => setDeleteModelHide(false)}\r\n              dialogClassName=\"modal-90w\"\r\n              aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                  Xóa bảng\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Footer>\r\n                <button\r\n                  className=\"btn btn-danger float-left\"\r\n                  onClick={() => handleDeleteBoard()}\r\n                >\r\n                  Xác nhận\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BoardItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BoardItem from \"../BoardItem/BoardItem\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction BoardList(props) {\r\n  //check is token is expire or not ?\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  if (accessToken) {\r\n  } else {\r\n  }\r\n  const [data, setData] = useState([]);\r\n  const [isModalHide, setIsModalHide] = useState(false);\r\n  const [boardName, setBoardName] = useState(\"\");\r\n  const [notification, setNotification] = useState(\"\");\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n  const requestAddNewBoard = async () => {\r\n    const response = await fetch(herokuhost + \"/boards/add\", {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        \"content-type\": \"application/json\",\r\n        authorization: accessToken,\r\n      }),\r\n      body: JSON.stringify({ boardName: boardName }),\r\n    });\r\n    if (response.status === 200) {\r\n      const dataRes = await response.json();\r\n      setData(data.concat(dataRes.data));\r\n      alert(dataRes.message);\r\n      setBoardName(\"\");\r\n      setIsModalHide(false);\r\n    } else {\r\n      const dataRes = await response.json();\r\n      alert(dataRes.message);\r\n    }\r\n  };\r\n  const loadData = () => {\r\n    //const response = fetch(\"https://hk7webadvmidtermserver.herokuapp.com/boards\")\r\n    fetch(herokuhost + \"/boards\", {\r\n      headers: {\r\n        mode: \"no-cors\",\r\n        authorization: accessToken,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"card\"\r\n        style={{ width: \"10rem\" }}\r\n        onClick={() => setIsModalHide(true)}\r\n      >\r\n        <div className=\"card-body\">\r\n          <FontAwesomeIcon icon={faPlusCircle} size=\"4x\" style={{color: \"green\", marginLeft: \"23%\"}}/>\r\n          <small style={{ paddingLeft: \"25%\" }}>Bảng mới</small>\r\n        </div>\r\n      </div>\r\n      {data.map((item) => (\r\n        <BoardItem\r\n          key={item.boardId}\r\n          BoardItem={item}\r\n          onClick={() => alert(item.boardId)}\r\n        />\r\n      ))}\r\n      <div>\r\n        <Modal\r\n          show={isModalHide}\r\n          onHide={() => setIsModalHide(false)}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Thêm bảng mới\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              <label>Tên bảng</label>\r\n              <input\r\n                type=\"text\"\r\n                value={boardName}\r\n                onChange={(e) => setBoardName(e.target.value)}\r\n              />\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <p className=\"notification\">{notification}</p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary float-left\"\r\n              onClick={requestAddNewBoard}\r\n            >\r\n              Xác nhận\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default BoardList;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faColumns } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nfunction Header(props) {\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n  }\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <Link to=\"/\">\r\n          <h1 className=\"Logo\">AnotherRetro</h1>\r\n        </Link>\r\n        <ul className=\"nav-links\">\r\n          <Link to=\"/dashboard\">\r\n            <li>\r\n              <FontAwesomeIcon icon={faColumns} size=\"2x\" />\r\n              <span>Dashboard</span>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/profile\">\r\n            <li>\r\n              <FontAwesomeIcon icon={faUserCircle} size=\"2x\" />\r\n              <span>Trang cá nhân</span>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/login\" onClick={handleLogout}>\r\n            <li>\r\n              <FontAwesomeIcon icon={faSignOutAlt} size=\"2x\" />\r\n              <span>Đăng xuất</span>\r\n            </li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BoardList from \"../BoardList/BoardList\";\r\nimport \"./style.css\";\r\nimport Header from \"../Header/Header\";\r\nfunction Dashboard(props) {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const [isModalHide, setIsModalHide] = useState(false);\r\n  const [boardName, setBoardName] = useState(\"\");\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <h1 className=\"float-left\">My Boards</h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <p>\r\n            {\" \"}\r\n            {localStorage.getItem(\"accessToken\")\r\n              ? null\r\n              : \"Vui lòng đăng nhập để sử dụng!\"}\r\n          </p>\r\n        </div>\r\n        <div className=\"row\">\r\n          <BoardList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Modal } from \"react-bootstrap\";\r\nexport default function Task(props) {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const [editTaskModalHide, setEditTaskModalHide] = useState(false);\r\n  const [deleteTaskModalHide, setDeleteTaskModalHide] = useState(false);\r\n  const [newTaskName, setNewTaskName] = useState(\"\");\r\n  const [showTask, setShowTask] = useState(true);\r\n  const requestEditTask = async () => {\r\n    const response = await fetch(herokuhost + \"/tasks/update\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        taskId: props.taskItem.commentId,\r\n        newTaskName: newTaskName,\r\n      }),\r\n    });\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      props.taskItem.content = newTaskName;\r\n      alert(data.message);\r\n      setEditTaskModalHide(false);\r\n    }\r\n  };\r\n  const requestDeleteTask = async () => {\r\n    const response = await fetch(herokuhost + \"/tasks/delete\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        taskId: props.taskItem.commentId,\r\n      }),\r\n    });\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      props.taskItem.isDeleted = 1;\r\n      hideDeletedTask();\r\n      alert(data.message);\r\n    }\r\n  };\r\n  const hideDeletedTask = () => {\r\n    if (props.taskItem.isDeleted === 1) setShowTask(!showTask);\r\n  };\r\n  const handleDeleteTask = () => {\r\n    requestDeleteTask();\r\n    setDeleteTaskModalHide(true);\r\n  };\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      {showTask && (\r\n        <div className=\"card\" style={{}}>\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\">{props.taskItem.content}</p>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <button\r\n              className=\"btn btn-success\"\r\n              onClick={() => setEditTaskModalHide(true)}\r\n            >\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              style={{ marginLeft: \"1rem\" }}\r\n              onClick={() => setDeleteTaskModalHide(true)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </button>\r\n          </div>\r\n          <div>\r\n            {/* edit modal */}\r\n            <Modal\r\n              show={editTaskModalHide}\r\n              onHide={() => setEditTaskModalHide(false)}\r\n              dialogClassName=\"modal-90w\"\r\n              aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                  Sửa nội dung thẻ\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div>\r\n                  <label>Tên mới</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newTaskName}\r\n                    onChange={(e) => setNewTaskName(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <button\r\n                  className=\"btn btn-primary float-left\"\r\n                  onClick={() => requestEditTask()}\r\n                >\r\n                  Xác nhận\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            {/* Delete Modal */}\r\n            <Modal\r\n              show={deleteTaskModalHide}\r\n              onHide={() => setDeleteTaskModalHide(false)}\r\n              dialogClassName=\"modal-90w\"\r\n              aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                  Xóa thẻ\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Footer>\r\n                <button\r\n                  className=\"btn btn-danger float-left\"\r\n                  onClick={() => handleDeleteTask()}\r\n                >\r\n                  Xác nhận\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Task from \"../Task/Task\";\r\nimport { Modal } from \"react-bootstrap\";\r\nfunction ListTask(props) {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const [isModalHide, setIsModalHide] = useState(false);\r\n  const [newTaskName, setNewTaskName] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const requestAddTask = async () => {\r\n    const response = await fetch(herokuhost + \"/tasks/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ content: newTaskName, columnId: props.ColumnId }),\r\n    });\r\n    if (response.status === 200) {\r\n      const dataRes = await response.json();\r\n      console.log(dataRes);\r\n      alert(dataRes.message);\r\n      setNewTaskName(\"\");\r\n      setData(data.concat(dataRes.data));\r\n      setIsModalHide(false);\r\n    } else {\r\n      const data = await response.json();\r\n      alert(data.message);\r\n    }\r\n  };\r\n  const requestAllTask = async () => {\r\n    const response = await fetch(herokuhost + \"/tasks/tasks\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ columnId: props.ColumnId }),\r\n    });\r\n    const data = await response.json();\r\n    setData(data);\r\n  };\r\n  useEffect(() => {\r\n    requestAllTask();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* <p>{props.ColumnId}</p> */}\r\n      <button\r\n        className=\"btn btn-primary btn-lg btn-block\"\r\n        onClick={() => {\r\n          setIsModalHide(true);\r\n        }}\r\n      >\r\n        +\r\n      </button>\r\n      {data.map((item) => (\r\n        <Task key={item.commentId} taskItem={item} />\r\n      ))}\r\n      <Modal\r\n        show={isModalHide}\r\n        onHide={() => setIsModalHide(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Thêm thẻ mới\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <label>Tên thẻ</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newTaskName}\r\n              onChange={(e) => setNewTaskName(e.target.value)}\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary float-left\"\r\n            onClick={requestAddTask}\r\n          >\r\n            Xác nhận\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default ListTask;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ListTask from \"../ListTask/ListTask\";\r\nfunction Column(props) {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const [editColumnModalHide, setEditColumnModalHide] = useState(false);\r\n  const [deleteColumnModalHide, setDeleteColumnModalHide] = useState(false);\r\n  const [newColumnName, setNewColumnName] = useState(\"\");\r\n  const [showColumn, setShowColumn] = useState(true);\r\n  useEffect(() => {}, []);\r\n  const handleDeleteColumn = () => {\r\n    requestDeleteColumn();\r\n    setDeleteColumnModalHide(false);\r\n  };\r\n  const hideDeleteColumn = () => {\r\n    if (props.ColumnItem.isDeleted === 1) {\r\n      setShowColumn(!showColumn);\r\n    }\r\n  };\r\n  const requestEditColumn = async () => {\r\n    const response = await fetch(herokuhost + \"/columns/update\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        taskId: props.ColumnItem.taskId,\r\n        newcolumnName: newColumnName,\r\n      }),\r\n    });\r\n    if (response.status === 200) {\r\n      const dataRes = await response.json();\r\n      alert(dataRes.message);\r\n      props.ColumnItem.taskName = newColumnName;\r\n      setEditColumnModalHide(false);\r\n    } else {\r\n      const dataRes = await response.json();\r\n      alert(dataRes.message);\r\n    }\r\n  };\r\n  const requestDeleteColumn = async () => {\r\n    const response = await fetch(herokuhost + \"/columns/delete\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        taskId: props.ColumnItem.taskId,\r\n      }),\r\n    });\r\n    if (response.status === 200) {\r\n      const dataRes = await response.json();\r\n      alert(dataRes.message);\r\n      props.ColumnItem.isDeleted = 1;\r\n      hideDeleteColumn();\r\n      setEditColumnModalHide(false);\r\n    } else {\r\n      const dataRes = await response.json();\r\n      alert(dataRes.message);\r\n    }\r\n  };\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <React.Fragment>\r\n      {showColumn && (\r\n        <div className=\"col md-4\">\r\n          <div className=\"row\" style={{ marginBottom: \"1rem\" }}>\r\n            <div className=\"col-6\">\r\n              <h5> {props.ColumnItem.taskName}</h5>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <button\r\n                className=\"btn btn-dark\"\r\n                style={{ marginLeft: \"50%\" }}\r\n                onClick={() => setEditColumnModalHide(true)}\r\n              >\r\n                <FontAwesomeIcon icon={faEdit} />\r\n              </button>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <button\r\n                className=\"btn btn-dark\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={() => setDeleteColumnModalHide(true)}\r\n              >\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <ListTask ColumnId={props.ColumnItem.taskId} />\r\n        </div>\r\n      )}\r\n      <div>\r\n        {/* edit Modal  */}\r\n        <Modal\r\n          show={editColumnModalHide}\r\n          onHide={() => setEditColumnModalHide(false)}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Sửa tên bảng\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              <label>Tên mới</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newColumnName}\r\n                onChange={(e) => setNewColumnName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              className=\"btn btn-primary float-left\"\r\n              onClick={() => requestEditColumn()}\r\n            >\r\n              Xác nhận\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        {/* Delete Modal */}\r\n        <Modal\r\n          show={deleteColumnModalHide}\r\n          onHide={() => setDeleteColumnModalHide(false)}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Xóa cột\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Footer>\r\n            <button\r\n              className=\"btn btn-danger float-left\"\r\n              onClick={() => handleDeleteColumn()}\r\n            >\r\n              Xác nhận\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Column;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Column from \"../Column/Column\";\r\nimport Header from \"../Header/Header\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction BoardDetail(props) {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const defaultLocalUrl = \"http://localhost:3001\";\r\n  const githubpagesUrl = \"https://lethanhtruongvinh99.github.io\"\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  let url = useRouteMatch();\r\n  const boardId = url.params.boardId;\r\n  const [data, setData] = useState([]);\r\n  const [boardData, setBoardData] = useState({});\r\n  const [addColumnModalHide, setAddColumnModalHide] = useState(false);\r\n  const [newColumnName, setNewColumnName] = useState(\"\");\r\n  const [notification, setNotification] = useState(\"\");\r\n  const handleShareButton = () => {\r\n    navigator.clipboard.writeText(githubpagesUrl + url.url);\r\n    alert(\"Đã copy vào clipboard!\");\r\n  };\r\n  const loadBoardInfo = async () => {\r\n    const response = await fetch(\r\n      // `http://localhost:3000/boards/boardId=${boardId}`,\r\n      `https://hk7webadvmidtermserver.herokuapp.com/boards/boardId=${boardId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          authorization: accessToken,\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setBoardData(data);\r\n    }\r\n  };\r\n  const loadBoardColumns = async () => {\r\n    const response = await fetch(herokuhost + \"/columns/columns\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ boardId: boardId }),\r\n    });\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setData(data);\r\n    }\r\n  };\r\n  const requestAddNewColumn = async () => {\r\n    const response = await fetch(herokuhost + \"/columns/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ boardId: boardId, taskName: newColumnName }),\r\n    });\r\n    if (response.status === 200) {\r\n      const dataRes = await response.json();\r\n      setData(data.concat(dataRes.data));\r\n      alert(dataRes.message);\r\n      setNewColumnName(\"\");\r\n      setAddColumnModalHide(false);\r\n    } else {\r\n      const dataRes = await response.json();\r\n      alert(dataRes.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadBoardInfo();\r\n    loadBoardColumns();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container-fluid bg-light\">\r\n        <div className=\"row\">\r\n          <h1 className=\"bg-light text-primary text-center\">\r\n            {boardData.boardName}\r\n          </h1>\r\n          <br />\r\n        </div>\r\n        <div className=\"row\" style={{ marginBottom: \"1rem\" }}>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            style={{\r\n              color: \"white\",\r\n              marginLeft: \"10px\",\r\n              marginRight: \"1rem\",\r\n            }}\r\n            onClick={() => setAddColumnModalHide(true)}\r\n          >\r\n            Thêm cột mới\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={handleShareButton}\r\n            style={{\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            Chia sẻ\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          {/* list of Columns */}\r\n          {data.map((item) => (\r\n            <Column key={item.taskId} ColumnItem={item} />\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            show={addColumnModalHide}\r\n            onHide={() => setAddColumnModalHide(false)}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                Thêm cột mới\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div>\r\n                <label>Tên cột</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newColumnName}\r\n                  onChange={(e) => setNewColumnName(e.target.value)}\r\n                />\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <p className=\"text-dangerous\" style={{ fontStyle: \"italic\" }}>\r\n                {notification}\r\n              </p>\r\n              <button\r\n                // href=\"/dashboard\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary float-left\"\r\n                onClick={requestAddNewColumn}\r\n              >\r\n                Xác nhận\r\n              </button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default BoardDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../Header/Header\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction Profile(props) {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const history = useHistory();\r\n  //get accessToken and fetch user data\r\n  // console.log(localStorage.getItem(\"accessToken\"));\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const [user, setUser] = useState({});\r\n  const [editedName, setEditedName] = useState(\"\");\r\n  const [notification, setNotification] = useState();\r\n  const [changePasswordNotification, setChangePasswordNotification] = useState(\r\n    \"\"\r\n  );\r\n  const [changepasswordMoDalHide, setChangePasswordModalHide] = useState(false);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confNewPassword, setConfNewPassowrd] = useState(\"\");\r\n  const updateProfile = async () => {\r\n    const respone = await fetch(herokuhost + \"/users/update\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ fullname: editedName }),\r\n    });\r\n    const data = await respone.json();\r\n    alert(data.message);\r\n    setNotification(data.message);\r\n  };\r\n  const changePassword = async () => {\r\n    const response = await fetch(herokuhost + \"/users/changepassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password: newPassword,\r\n        confPassword: confNewPassword,\r\n      }),\r\n    });\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      alert(data.message);\r\n      setChangePasswordNotification(\"\");\r\n      setChangePasswordModalHide(false);\r\n    } else {\r\n      const data = await response.json();\r\n      setChangePasswordNotification(data.message);\r\n    }\r\n  };\r\n  const getProfile = async () => {\r\n    const response = await fetch(herokuhost + \"/users/profile\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: accessToken,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    });\r\n    if (response.status === 401) {\r\n      const data = await response.json();\r\n      setNotification(data.message);\r\n    }\r\n    if (response.status === 200) {\r\n      const data = await response.json();\r\n      setUser(data);\r\n      data.fullname === null\r\n        ? setEditedName(\"null\")\r\n        : setEditedName(data.fullname);\r\n    }\r\n  };\r\n  const handleBack = () => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      console.log(\"Nothing to show here!\");\r\n      setNotification(\"Vui lòng đăng nhập!\");\r\n      handleBackToLogin();\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateProfile();\r\n  };\r\n  const handleBackToLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const handleChangePassword = () => {\r\n    changePassword();\r\n  };\r\n  useEffect(() => {\r\n    handleBack();\r\n    getProfile();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"main-container\">\r\n        <div className=\"header\">Thông tin tài khoản</div>\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"fullname\">Họ và tên</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"fullname\"\r\n              name=\"fullname\"\r\n              value={editedName}\r\n              onChange={(e) => setEditedName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Tên đăng nhập</label>\r\n            <strong style={{ fontSize: \"24px\" }}>{user.username}</strong>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Mật khẩu</label>\r\n            <small\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                setChangePasswordModalHide(true);\r\n              }}\r\n            >\r\n              Đổi mật khẩu\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerDate\">Ngày tạo</label>\r\n            <strong style={{ fontSize: \"24px\" }}>{user.createdDate}</strong>\r\n          </div>\r\n          <p className=\"notification\">{notification}</p>\r\n          <hr />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-warning btn-lg btn-block\"\r\n            style={{ marginTop: \"1rem\" }}\r\n          >\r\n            Cập nhật\r\n          </button>\r\n          <hr />\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <Modal\r\n          show={changepasswordMoDalHide}\r\n          onHide={() => setChangePasswordModalHide(false)}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Đổi mật khẩu\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"newPasswowrd\">Mật khẩu mới</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"newPassword\"\r\n                  name=\"newPassword\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"confNewPasswowrd\">Nhập lại mật khẩu mới</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"confNewPassword\"\r\n                  name=\"confNewPassword\"\r\n                  value={confNewPassword}\r\n                  onChange={(e) => setConfNewPassowrd(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <p className=\"notification\">{changePasswordNotification}</p>\r\n            <button\r\n              className=\"btn btn-primary float-left\"\r\n              onClick={handleChangePassword}\r\n            >\r\n              Xác nhận\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CheckAuth() {\r\n  const localhost = \"http://localhost:3000\";\r\n  const herokuhost = \"https://hk7webadvmidtermserver.herokuapp.com\";\r\n  const history = useHistory();\r\n  const [notification, setNotification] = useState(\"\");\r\n  useEffect(() => {\r\n    getFromRedirect();\r\n  }, []);\r\n  const getFromRedirect = async () => {\r\n    const response = await fetch(herokuhost + \"/login/google/success\");\r\n    const data = await response.json();\r\n    if (response.status === 200) {\r\n      localStorage.setItem(\"accessToken\", data.accessToken);\r\n    }\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n      setNotification(\"Đang chuyển hướng...\");\r\n      history.push(\"/dashboard\");\r\n    } else {\r\n      setNotification(\"Đăng nhập thất bại\");\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <p>{notification}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default CheckAuth;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Login from \"./Components/Login/Login\";\nimport Signup from \"./Components/Login/Signup\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\nimport Landing from \"./Components/Landing/Landing\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport BoardDetail from \"./Components/BoardDetail/BoardDetail\";\nimport Profile from \"./Components/Login/Profile\";\nimport CheckAuth from \"./Components/CheckAuth/CheckAuth\";\nfunction App(props) {\n  const checkLoggedIn = false;\n  // useEffect(() => {});\n  //to use that app with local host, use BrowserRouter and all\n  return (\n    <div>\n      <HashRouter basename=\"\">\n        <div>\n          <Switch>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/checkauth\" component={CheckAuth} />\n            <Route path={`/boardID:boardId`} component={BoardDetail} />\n          </Switch>\n        </div>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}